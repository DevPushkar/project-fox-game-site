{"componentChunkName":"component---src-templates-lesson-template-js","path":"/the-states","result":{"data":{"markdownRemark":{"html":"<p>So now we have a game and a running clock. Let's make it run through the motions then!</p>\n<p>Let's define the actions, the edges, the transformations of the game. How we do go from one state like <code class=\"language-text\">HUNGRY</code> to <code class=\"language-text\">FEEDING</code>? It'd be some sort of action, right? You'd feed it, right? Then go ahead name that function <code class=\"language-text\">feed()</code>.</p>\n<p>But let's not get ahead of ourselves. Let's go from <code class=\"language-text\">INIT</code> (where the game is waiting) to a starting state, which we're calling <code class=\"language-text\">HATCHING</code>.</p>\n<p>I'd just call this <code class=\"language-text\">startGame()</code> since that's the gesture we're going through. Make <code class=\"language-text\">gameState</code> say this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> gameState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  current<span class=\"token punctuation\">:</span> <span class=\"token string\">\"INIT\"</span><span class=\"token punctuation\">,</span>\n  clock<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  wakeTime<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clock<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clock <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wakeTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">wake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clock<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">startGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token string\">\"HATCHING\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wakeTime <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clock <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">wake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wake\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token string\">\"IDLING\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wakeTime <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> gameState<span class=\"token punctuation\">;</span></code></pre></div>\n<p>This will get the game going but we have no way to start it. So let's detour a second to get some basic UI working with it.</p>","frontmatter":{"path":"/the-states","title":"The States","order":"4B","section":"The Game","description":"The Project"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"2B","path":"/build-process","title":"Build Process"}}},{"node":{"frontmatter":{"order":"2D","path":"/code-formatting","title":"Code Formatting"}}},{"node":{"frontmatter":{"order":"2C","path":"/code-style","title":"Code Style"}}},{"node":{"frontmatter":{"order":"2E","path":"/editor-setup","title":"Editor Setup"}}},{"node":{"frontmatter":{"order":"2A","path":"/hello-world","title":"Hello World"}}},{"node":{"frontmatter":{"order":"3B","path":"/init","title":"Init the Project"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"2F","path":"/linting","title":"Linting"}}},{"node":{"frontmatter":{"order":"1B","path":"/fox","title":"Previous"}}},{"node":{"frontmatter":{"order":"3A","path":"/organization","title":"Organizing Your Code"}}},{"node":{"frontmatter":{"order":"4A","path":"/some-ui","title":"Some UI"}}},{"node":{"frontmatter":{"order":"3C","path":"/state-machine","title":"State Machine"}}},{"node":{"frontmatter":{"order":"2G","path":"/testing","title":"Testing"}}},{"node":{"frontmatter":{"order":"1B","path":"/the-project","title":"The Project"}}},{"node":{"frontmatter":{"order":"4B","path":"/the-states","title":"The States"}}},{"node":{"frontmatter":{"order":"2H","path":"/type-checking","title":"Type Checking"}}}]}},"pageContext":{}}}